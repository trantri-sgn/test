{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenan/Documents/react-task-tracker/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]); //Delete Task\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  }; // Add Task\n\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000 + 1);\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task-Tracker\",\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"No Task To Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"s8LzkA5aeSm1dim22ZlWGmFnnlE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nguyenan/Documents/react-task-tracker/src/App.jsx"],"names":["useState","React","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","deleteTask","id","filter","task","toggleReminder","map","reminder","addTask","Math","floor","random","newTask","length","color"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,CAFgB,CAGhB;;AACA,QAAMU,UAAU,GAAIC,EAAD,IAAQ;AACzBF,IAAAA,QAAQ,CAACD,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAGA,QAAMG,cAAc,GAAIH,EAAD,IAAQ;AAC7BF,IAAAA,QAAQ,CACND,KAAK,CAACO,GAAN,CAAWF,IAAD,IACRA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GACI,EACE,GAAGE,IADL;AAEEG,MAAAA,QAAQ,EAAE,CAACH,IAAI,CAACG;AAFlB,KADJ,GAKIH,IANN,CADM,CAAR;AAUD,GAXD,CAPgB,CAmBhB;;;AACA,QAAMI,OAAO,GAAIJ,IAAD,IAAU;AACxB,UAAMF,EAAE,GAAGO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAhB,GAAwB,CAAnC,CAAX;AACA,UAAMC,OAAO,GAAG;AAAEV,MAAAA,EAAF;AAAM,SAAGE;AAAT,KAAhB;AACAJ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWa,OAAX,CAAD,CAAR;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,KAAK,EAAE,MAAMd,cAAc,CAAC,CAACD,WAAF,CAF7B;AAGE,MAAA,OAAO,EAAEA;AAHX;AAAA;AAAA;AAAA;AAAA,YADF,EAMGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEW;AAAhB;AAAA;AAAA;AAAA;AAAA,YANlB,EAOGT,KAAK,CAACc,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEd,KAAd;AAAqB,MAAA,QAAQ,EAAEE,UAA/B;AAA2C,MAAA,QAAQ,EAAEI;AAArD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAI,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAzCD;;GAAMlB,G;;KAAAA,G;AA2CN,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  //Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id\n          ? {\n              ...task,\n              reminder: !task.reminder,\n            }\n          : task\n      )\n    );\n  };\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000 + 1);\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task-Tracker\"\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        <h3 style={{ color: \"red\" }}>No Task To Show</h3>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}